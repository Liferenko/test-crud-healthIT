{"version":3,"sources":["patients_management_system/core.cljs"],"mappings":"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","names":["patients-management-system.core/handler","response","js/console","reagent.core.atom","p__28367","map__28368","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","patients-management-system.core/error-handler","status","status-text","patients-management-system.core/get-patients","ajax.core.GET","patients-management-system.core/get-patient","patients-management-system.core/add-patient!","ajax.core.POST","patients-management-system.core/update-patient!","patient-id","ajax.core.PUT","patients-management-system.core/remove-patient!","ajax.core.DELETE","patients-management-system.core/patients","patients-management-system.core/formInput","input-type","atomValue","placeholder","value","event","cljs.core/reset!","patients-management-system.core/patient-form","fullName","gender","birthDate","address","policyNumber","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/conj","patients-management-system.core/header","patients-management-system.core/patient-data","patient","patients-management-system.core/content","iter__4529__auto__","s__28394","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__28399","cljs.core/chunk-buffer","i__28398","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__28393","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","patients-management-system.core/footer","patients-management-system.core/home-page","patients-management-system.core/mount-root","reagent.dom.render","js/document","patients-management-system.core/init!","cljs.core/chunk-first"],"sourcesContent":["(ns patients-management-system.core\n    (:require\n      [reagent.core :as r]\n      [reagent.dom :as d]\n      [ajax.core :refer [GET POST PUT DELETE]]))\n\n(defn handler [response]\n  (.log js/console (r/atom response)))\n\n(defn error-handler [{:keys [status status-text]}]\n  (.log js/console (str \"something bad happened: \" status \" \" status-text)))\n\n(defn get-patients []\n  (GET \"http://localhost:3001/patients\" \n       {:handler handler\n        :error-handler error-handler\n        :response-format :json\n        :keywords? true}))\n\n(defn get-patient []\n  (GET \"http://localhost:3001/patients/:id\" \n       {:handler handler\n        :error-handler error-handler}))\n\n(defn add-patient! []\n  (POST \"http://localhost:3001/patients\" \n       {:handler handler\n        :error-handler error-handler}))\n\n(defn update-patient! [patient-id]\n  (PUT (str \"http://localhost:3001/patients/\" patient-id) ;; TODO add id as a parameter\n       {:handler handler\n        :error-handler error-handler}))\n\n(defn remove-patient! [patient-id]\n  (DELETE (str \"http://localhost:3001/patients/\" patient-id) ;; TODO add id as a parameter\n       {:handler handler\n        :error-handler error-handler}))\n\n;;(def patients (get-patients))\n(def patients (r/atom [])) ;; TODO R u sure we need that defonce?\n\n\n\n\n;; -------------------------\n;; Views\n(defn formInput \n  [input-type atomValue placeholder value]\n  [:div.col-6\n   [:input.input-group-text {:type input-type\n                             :value atomValue\n                             :placeholder placeholder\n                             :on-change (fn [event]\n                                          (reset! value (.-value (.-target event))))}]])\n\n(defn patient-form []\n  (let [fullName (r/atom \"\") \n        gender (r/atom \"\")\n        birthDate (r/atom \"\")\n        address (r/atom \"\")\n        policyNumber (r/atom \"\")]\n    (fn []\n      [:div.card\n        [:div.card-body \n         [:h4.card-title \"New patient's data\"]\n         [:form {:on-submit (fn [event] \n                             (.preventDefault event) \n                             (swap! patients conj {:fullName @fullName\n                                                   :gender @gender\n                                                   :birthDate @birthDate\n                                                   :address @address\n                                                   :policyNumber @policyNumber\n                                                   :verified true })\n                             ;;(add-patient! @patient) ;; TODO It's not finished. It is a blueprint\n                             (reset! fullName \"\")\n                             (reset! address \"\"))}\n          [:div.row\n           [formInput \"text\" @fullName \"Full name\" fullName]\n           [formInput \"text\" @gender \"Select gender\" gender]\n           [formInput \"date\" @birthDate \"Birth date\" birthDate]\n           [formInput \"text\" @address \"Address\" address]\n           [formInput \"number\" @policyNumber \"Enter incurance policy number\" policyNumber]]\n\n           [:button.btn.btn-primary {:type :submit} \"Add new patient\"]]]])))\n\n(defn header []\n  [:div\n   [:div.jumbotron\n    [:div.text-center \n     [:h1 \"Welcome to Tiny Cliniq!\"]]]])\n\n(defn patient-data [patient]\n  [:li.list-group-item.list-group-item-action\n   {:style {:color (if (:verified patient) \"green\" \"red\")}} \n   [:div.row\n     [:div.col (:fullName patient)] \n     [:div.col (:gender patient)] \n     [:div.col (:birthDate patient)]\n     [:div.col (:address patient)]\n     [:div.col (:policyNumber patient)]\n     [:div.col.dropdown \n      [:button#dropdownMenuButton.btn.btn-light.btn-sm.dropdown-toggle \n       {:type \"button\" \n        :data-toggle \"dropdown\" \n        :aria-haspopup \"true\" \n        :aria-expanded \"false\"} \"...\"\n         [:div.dropdown-menu\n          [:span.dropdown-item {:on-click (fn [patient] (remove-patient! (:id patient)))} \"Remove patient\"] ;; TODO to fix an :on-click fn\n          [:span.dropdown-item {:on-click (fn [patient] (update-patient! (:id patient)))} \"Edit patient\"]]]]]]) \n\n(defn content []\n  [:div.row.container-fluid\n    [:div.col-sm-12.col-md-7 \n     [:h4 \"List of patients\"]\n     [:ul\n      (for [patient @patients]\n        (patient-data patient))]\n    ]\n    [:div.col-sm-12.col-md-4 \n     [:h4 \"Add a new patient's info below:\"]\n     [patient-form]]])\n\n(defn footer []\n  [:div\n   [:div.jumbotron\n    [:div [:p.text-muted \"(c) All right reserved | Tiny Cliniq, 2020\"]]]])\n\n\n(defn home-page []\n  [:div\n    [header]\n    [content]\n    [footer]])\n\n;; -------------------------\n;; Initialize app\n\n(defn mount-root []\n  (d/render [home-page] (.getElementById js/document \"app\")))\n\n(defn ^:export init! []\n  (get-patients)\n  (mount-root))\n"]}